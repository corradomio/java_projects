<?xml version="1.0" encoding="UTF-8"?>
<!--
We need to create API to give the web-user flexibility to re-configure  the value for these variables:
Workspace directory
	Analysis time limit
	Method limit
	Size limit x line of code
	line.allocatedMemory
	uploads path
	module.exclude
	log location
  -->
<configuration>
    <splreposManager workspace="$workspace">
        <workspace name="$workspace" path="D:/SPLGroup/spl-workspaces/dev-workspace/workspace">
            Where the workspace is located
        </workspace>
    </splreposManager>

    <system>
        <uploads path="${sys:user.home}/.spl/uploads">
            Upload directory in the SERVER filesystem
        </uploads>

        <messages>
            <keepalive timeout="20000">Websocket keepalive timeout</keepalive>
            <progress  timeout="10000">Websocket progress messages timeout</progress>
        </messages>

        <extlibsManager>
            <maven>
                <download timeout="500">Milliseconds to wait between two consecutive downloads</download>
                <check timeout="86400">Second to wait before to retry to download a Maven artifact</check>
                <repository url="https://repo1.maven.org/maven2"/>
                <repository url="https://repo.maven.apache.org/maven2"/>
                <repository url="https://mvnrepository.com/artifact/" />
                <repository url="https://repo.spring.io/plugins-release/" />
                <repository url="https://plugins.gradle.org/m2/" />
                <repository url="https://repo.gradle.org/gradle/libs-releases-local/" />
            </maven>
        </extlibsManager>
    </system>

    <!--
        Default configurations for models analysis
      -->
    <models>
        <common>
            <!-- keep some old reports -->
            <property name="keepReports" value="3">Number of old reports to save</property>
        </common>

        <source>

        </source>

        <dependency>
            <property name="keepReports" value="3">Number of old reports to save</property>

            <property name="size.limit" value="0">
                max number of lines to analyze a source file.
                files with more lines will be skipped

                0 -> no limits
            </property>
            <!--
                max time to analyze a single file ('time.limit')
                or a single method ('method.limit')

                Formats:
                    [[dd:]hh:]mm:ss
                    {value}ms
                    {value}s
                    {value}m
                    {value}h

               'dd','hh','mm','ss' must be integers
               {value} can be an integer or a real value

               0 -> no limits
               however it can be a good idea to assign some reasonable value
            -->
            <property name="time.limit" value="5m">
                max time to analyze a single file

                Formats:
                [[dd:]hh:]mm:ss
                {value}ms
                {value}s
                {value}m
                {value}h

                'dd','hh','mm','ss' must be integers
                {value} can be an integer or a real value

                0 -> no limits
                however it can be a good idea to assign some reasonable value
            </property>
            <property name="method.limit" value="10s">
                max time to analyze a single method

                Formats:
                [[dd:]hh:]mm:ss
                {value}ms
                {value}s
                {value}m
                {value}h

                'dd','hh','mm','ss' must be integers
                {value} can be an integer or a real value

                0 -> no limits
                however it can be a good idea to assign some reasonable value
            </property>

            <property name="line.allocatedMemory" value="10KB">
                Approximated memory allocated for each line of code.
                This value is used to guess the memory used during the analysis
                and to decide if the analysis can start or it is necessary
                to wait that some running analysis terminate.
            </property>

            <property name="module.resources.$" value=".xml,.properties,.json,.gradle,.project,.classpath">
                list of file extensions considered as 'resources'
            </property>

            <property name="module.sources.$" value=".java">
                list of file extensions considered as 'source files'
            </property>

            <property name="module.exclude.$" value=".*">
                list of file/directory names to exclude
            </property>
        </dependency>

        <component>
            <property name="componentSamples" value="0"/>
            <property name="componentTimeout" value="0"/>
        </component>

        <feature>

        </feature>

        <cluster>

        </cluster>

        <runtime>

        </runtime>
    </models>

    <!--
        Cache configurations.
        Each cache has a "qualified name".
        If not specified, its configuration is inherited from the "parent names".
        The default for the "root" cache (the cache with name "") is

            - infinite capacity
            - no expiry

        However it is a good idea to define reasonable default values.
        Available configuration elements:

            - capacity          int
            - expireAfterWrite  interval
            - expireAfterAccess interval
            - weakValues        boolean
            - softValues        boolean

        'interval' can be specified in several way:

            '<int>'         in milliseconds
            '<int> ms'      in milliseconds
            '<int> s'       in seconds

            'mm:ss' | 'hh:mm:ss' | 'dd:hh:mm:ss'   where
                'ss': seconds
                'mm': minutes
                'hh': hours
                'dd': days

        Current used caches:

            'dependency.<projectId>.library.types'
            'dependency.<projectId>.module.types'
            'dependency.<projectId>.module.allTypes'
            'dependency.<projectId>.module.usedTypes'

            'maven.normalizedCoords'
            'maven.pom'

            'web.lists'
            'web.hrefMapper'

      -->
    <cacheManager>
        <cache name="">
            <capacity value="1024"/>
            <expireAfterWrite value="1:00"/>
        </cache>

        <cache name="global">
            <capacity value="1024"/>
            <expireAfterWrite value="5:00"/>
        </cache>

        <cache name="web">
            <capacity value="128"/>
            <expireAfterWrite value="5:00"/>
        </cache>

        <cache name="web.hrefMapper">
            <capacity value="4096"/>
            <expireAfterWrite value="1:00:00"/>
        </cache>

        <cache name="maven">
            <expireAfterWrite value="60:00"/>
        </cache>

        <cache name="system.dbcleanup">
            <expireAfterWrite value="1:00"/>
        </cache>

        <cache name="dependency.*">
            <!-- if an entry is not accessed after 3 minutes, can be delete -->
            <expireAfterAccess value="5:00"/>
            <softValues value="true"/>
        </cache>

    </cacheManager>

</configuration>