<?xml version="1.0" encoding="utf-8" ?>

<!--
    Ant documentation: https://ant.apache.org/manual/index.html

    'path'      ::=  location (:|;) location ...
    'location'  ::=  single file/directory. Can contain wildcards (*, ?)

    Patterns used in file names

    ?       any char, excluding '/','\'
    *       any seq of chars, excluding '/','\'
    **      any seq of subdirs or, if used alone or as last element,
            any seq of subdirs AND files

  -->
<!--

    <fileset defaultexcludes="yes|no|true|false">
        <include name="wildcard"/>
        <exclude name="wildcard"/>
    </fileset>

  -->
<project version="1.0">
    <name>Project Template</name>
    <description>
        Example of SPL project specification file, used to extract the
        dependencies between modules, (internal/external) libraries,
        sourced and other resources
    </description>

    <!--
        Properties (not used yet)
    -->
    <properties>
        <property name="name" value="value"/>
        <property name="name">long value</property>
    </properties>

    <modules>
        <!--
            to identify automatically modules, sources resources etc,
            the project directory is 'scanned' recursively using the following
            list of rules
          -->
        <scan>
            <!--
                some files/directories must be excluded because they contain
                invalid/useless files

                Applied to file|directory name ONLY
              -->
            <exclude>
                <filename name=".*"/>
                <filename name="*~"/>

                <filename name="CVS"/>
                <filename name="SCCS"/>
                <filename name="*.scc"/>

                <filename name="target"/>
                <filename name="out"/>
                <filename name="build"/>
            </exclude>

            <!--
                a 'module' is each directory containing at least one of the
                following files.

                'name' must be 'relativePath'

                Macro available: '${dirName}' name of the current directory

                Applied to a directory as "<directory>/<name>"
              -->
            <module>
                <!-- Gradle: -->
                <filename name="build.gradle"/>
                <!-- Maven -->
                <filename name="./pom.xml"/>
                <!-- Ant -->
                <filename name="./build.xml"/>
                <!-- Eclipse -->
                <filename name=".classpath"/>
                <!-- Gradle -->
                <filename name="${dirName}.gradle"/>
                <!-- Maven -->
                <filename name="${dirName}.pom"/>
                <!-- a specific directory -->
                <filename name="src/main/java"/>
            </module>

        </scan>

        <!--
            it is possible to specify directly a module
            and add/remove properties or the module itself.

            For example, if the scan identify TOO modules,
            some modules can be 'removed'
          -->
        <remove>
            <filename name="**/*test*"/>
            <filename name="**/*example*"/>
        </remove>

        <!--
            The module with name '*' is used as 'template' for all other modules
            It contains the 'default configuration' for all aspects of the
            module structure
          -->
        <module name="*">
            <!--
                It is possible to specify the directory of an 'external modules',
                a module NOT DEFINED inside the project directory.
                For default, the module directory is

                    <projectDir>/<moduleName>

                If specified, the path can be 'absolute' (starts with '/' or '<letter>:/'
                or relative to the project path
              -->
            <!-- directory path="(absolute|relative)Path"/ -->

            <!--
                list of directories containing the 'source code'
                Maven and Gradle use, as 'standard' filesystem structure

                    src/main/<language>

                where <language> can be: java, scala, kotlin, groovy, ...
                For default, all files in the directory are considered as
                'source code'. However it is possible to specify the file
                names/extensions
              -->
            <!-- specify directly the source directories -->
            <sources>
                <directory name="src/main/java"/>
                <directory name="src/java" includes="*.java"/>
                <directory name="src">
                    <include name="**/*.java"/>
                </directory>
                <directory name="sources"/>
            </sources>

            <!--
                list of directories containing 'resources'.
                A resource is any file used for configuration, or used to model
                a web application, etc.

                Some common 'resources' are

                1) files with extension '.xml', '.properties'
                2) the content of the directory 'src/main/resources'
                3) the web applications, saved in 'src/main/webapp'
            -->
            <resources>
                <!-- include specific type of files in the current directory -->
                <directory name=".">
                    <include name="*.properties"/>
                    <include name="*.xml"/>
                    <include name="*.json"/>
                    <include name="*.yaml"/>
                </directory>
                <directory name="src/main/resources"/>
                <directory name="src/main/webapp"/>
            </resources>

            <!--
                Default repositories used to download maven libraries
              -->
            <repositories>
                <repository name="Maven Central" url="https://repo.maven.apache.org/maven2/"/>
            </repositories>

        </module>

        <module name="*.test">
            <directory name="/examples/test"/>

            <sources>
                <directory name="src/main/scala" includes="*.scala"/>
            </sources>

            <resources>

            </resources>

            <repositories>
                <repository name="" url=""/>
            </repositories>

            <dependencies>
                <!-- module -->
                <dependency module="moduleName"/>
                <!-- all files in 'libs' with extension '.jar' -->
                <dependency name="libs" includes="*.jar"/>
                <!-- all files in 'libs' directory -->
                <dependency name="libs"/>

                <!-- maven coords -->
                <dependency maven="groupId:artifactId[:version]"/>
                <!-- ivy syntax -->
                <dependency org="groupId" name="artifactId" rev="version"/>
                <!-- maven syntax -->
                <dependency>
                    <groupId>groupId</groupId>
                    <artifactId>artifactId</artifactId>
                    <version>version</version>
                </dependency>
            </dependencies>

        </module>

    </modules>

</project>